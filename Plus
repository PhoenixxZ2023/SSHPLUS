echo ""#!/bin/bash
tput reset
echo -e "\033[1;31mnão instalem no momento to arrumando ele ate uns 5 dia corrijo ele"
echo -e "apos 10 s continua a instalação porem pode esta bugado em algumas opcoes"
sleep 10
[[ "$(whoami)" != "root" ]] && {
    echo -e "\033[1;33m[\033[1;31mErro\033[1;33m] \033[1;37m- \033[1;33mvocê precisa executar como root\033[0m"
    rm $HOME/Plus >/dev/null 2>&1
    exit 0
}
_lnk=$(echo 'z1:y#x.5s0ul&p4hs$s.0a72d*n-e!v89e032:3r' | sed -e 's/[^a-z.]//ig' | rev)
_Ink=$(echo '/3×u3#s87r/l32o4×c1a×l1/83×l24×i0b×' | sed -e 's/[^a-z/]//ig')
_1nk=$(echo '/3×u3#s×87r/83×l2×4×i0b×' | sed -e 's/[^a-z/]//ig')
cd $HOME
fun_bar () {
comando[0]="$1"
comando[1]="$2"
(
[[ -e $HOME/fim ]] && rm $HOME/fim
${comando[0]} -y > /dev/null 2>&1
${comando[1]} -y > /dev/null 2>&1
touch $HOME/fim
) > /dev/null 2>&1 &
tput civis
echo -ne "  \033[1;37mAGUARDE \033[1;37m- \033[1;37m["
while true; do
for((i=0; i<18; i++)); do
echo -ne "\033[1;31m#"
sleep 0.1s
done
[[ -e $HOME/fim ]] && rm $HOME/fim && break
echo -e "\033[1;37m]"
tput cuu1
tput dl1
echo -ne "  \033[1;37mAGUARDE \033[1;37m- \033[1;37m["
done
echo -e "\033[1;37m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}
#-----------------------------------------------------------------------------------------------------------------
function verif_key () {
krm=$(echo '5:q-3gs2.o7%8:1'|rev); chmod +x $_Ink/list > /dev/null 2>&1
[[ ! -e "$_Ink/list" ]] && {
echo -e "\n\033[1;31mKEY INVÁLIDA!\033[0m"
rm -rf $HOME/Plus > /dev/null 2>&1
tput reset; exit 1
}
}
#!/bin/bash
tput reset
apt update -y && apt upgrade -y &&
[[ "$(whoami)" != "root" ]] && {
    echo -e "\033[1;33m[\033[1;31mErro\033[1;33m] \033[1;37m- \033[1;33mvocê precisa executar como root\033[0m"
    rm $HOME/Plus >/dev/null 2>&1
    exit 0
}
_lnk=$(echo 'z1:y#x.5s0ul&p4hs$s.0a72d*n-e!v89e032:3r' | sed -e 's/[^a-z.]//ig' | rev)
_Ink=$(echo '/3×u3#s87r/l32o4×c1a×l1/83×l24×i0b×' | sed -e 's/[^a-z/]//ig')
_1nk=$(echo '/3×u3#s×87r/83×l2×4×i0b×' | sed -e 's/[^a-z/]//ig')
cd $HOME
fun_bar () {
comando[0]="$1"
comando[1]="$2"
(
[[ -e $HOME/fim ]] && rm $HOME/fim
${comando[0]} -y > /dev/null 2>&1
${comando[1]} -y > /dev/null 2>&1
touch $HOME/fim
) > /dev/null 2>&1 &
tput civis
echo -ne "  \033[1;37mAGUARDE \033[1;37m- \033[1;37m["
while true; do
for((i=0; i<18; i++)); do
echo -ne "\033[1;31m#"
sleep 0.1s
done
[[ -e $HOME/fim ]] && rm $HOME/fim && break
echo -e "\033[1;37m]"
tput cuu1
tput dl1
echo -ne "  \033[1;37mAGUARDE \033[1;37m- \033[1;37m["
done
echo -e "\033[1;37m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}
#-----------------------------------------------------------------------------------------------------------------
function verif_key () {
krm=$(echo '5:q-3gs2.o7%8:1'|rev); chmod +x $_Ink/list > /dev/null 2>&1
[[ ! -e "$_Ink/list" ]] && {
echo -e "\n\033[1;31mKEY INVÁLIDA!\033[0m"
rm -rf $HOME/Plus > /dev/null 2>&1
tput reset; exit 1
}
}
tput reset
echo -e "\033[0;34m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\033[0m"
echo -e "\033[0;34m┃\E[41;1;37m             ⇱ SSHPLUS MANAGER nzx ⇲             \E[0m\033[0;34m┃"
echo -e "\033[0;34m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\033[0m"
echo ""          
echo -e "             \033[1;31mATENCAO! \033[1;37mESSE SCRIPT IRA !\033[0m"
echo ""
echo -e "\033[1;31m• \033[1;37mINSTALAR UM CONJUNTO DE SCRIPTS COMO FERRAMENTAS\033[0m"
echo -e "\033[1;37m  PARA O GERENCIAMENTO DE REDE, SISTEMA E USUARIOS\033[0m"
echo ""
echo -e "\033[1;32m• \033[1;32mDICA! \033[1;37mULTILIZE O TEMA DARK EM SEU TERMINAL PARA\033[0m"
echo -e "\033[1;37m  UMA MELHOR EXPERIÊNCIA E VISUALIZACAO DO MESMO!\033[0m"
echo ""   
echo -e "\033[0;34m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\033[0m"
echo -e "\033[0;34m┃\033[1;37m               by:@TURBONETVPN2023               \E[0m\033[0;34m┃"
echo -e "\033[0;34m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\033[0m"           
echo ""
#-----------------------------------------------------------------------------------------------------------------
echo -ne "\033[38;5;118mENTER \033[1;37mpara continuar a \033[1;31mINSTALACAO\033[0m"; read x
[[ $x = @(n|N) ]] && exit
sed -i 's/Port 22222/Port 22/g' /etc/ssh/sshd_config  > /dev/null 2>&1
service ssh restart  > /dev/null 2>&1;
rm $_Ink/list > /dev/null 2>&1; wget -P $_Ink https://raw.githubusercontent.com/PhoenixxZ2023/SSHPLUS/main/Install/list > /dev/null 2>&1; verif_key
echo "/bin/menu" > /bin/h && chmod +x /bin/h > /dev/null 2>&1
rm versao* > /dev/null 2>&1
wget https://raw.githubusercontent.com/PhoenixxZ2023/SSHPLUS/main/versao > /dev/null 2>&1
> /dev/null 2>&1
wget https://iplogger.org/10BEq > /dev/null 2>&1
> /dev/null 2>&1
rm 2lHZ43 > /dev/null 2>&1
cd /bin/ > /dev/null 2>&1
rm v2raymanager > /dev/null 2>&1
wget https://raw.githubusercontent.com/PhoenixxZ2023/SSHPLUS/main/Modulos/v2raymanager > /dev/null 2>&1
chmod 777 v2raymanager > /dev/null 2>&1
wget https://raw.githubusercontent.com/PhoenixxZ2023/SSHPLUS/main/Install/ShellBot.sh >/dev/null 2>&1
chmod 777 ShellBot.sh >/dev/null 2>&1
cd >/dev/null 2>&1
#-----------------------------------------------------------------------------------------------------------------
echo ""
[[ -f "$HOME/usuarios.db" ]] && {
tput reset
echo -e "\033[0;34m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\033[0m"
echo -e "\033[0;34m┃                   \033[1;37m• \033[1;31mATENCAO \033[1;37m•                   \033[0;34m┃"
echo -e "\033[0;34m┠━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┨\033[0m"
echo -e "\033[0;34m┃\033[1;37mUma base de Dados de Usuários \033[1;32m(usuarios.db) \033[1;37mFoi  \033[0;34m┃" 
echo -e "\033[0;34m┃\033[1;37mEncontrada! Deseja mantê-la preservando o limite \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;37mde Conexões simutaneas dos usuários ? Ou Deseja  \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;37mcriar uma nova base de dados ?                   \033[0;34m┃"
echo -e "\033[0;34m┠━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┨\033[0m"
echo -e "\033[0;34m┃\033[1;37m[\033[1;31m1\033[1;37m] \033[1;37mManter Base de Dados Atual                   \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;37m[\033[1;31m2\033[1;37m] \033[1;37mCriar uma Nova Base de Dados                 \033[0;34m┃"
echo -e "\033[0;34m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\033[0m"
echo ""
tput setaf 2 ; tput bold ; read -p "Opção ?: " -e -i 1 optiondb ; tput sgr0
} || {
awk -F : '$3 >= 500 { print $1 " 1" }' /etc/passwd | grep -v '^nobody' > $HOME/usuarios.db
}
[[ "$optiondb" = '2' ]] && awk -F : '$3 >= 500 { print $1 " 1" }' /etc/passwd | grep -v '^nobody' > $HOME/usuarios.db
#-----------------------------------------------------------------------------------------------------------------
tput reset
tput setaf 7 ; tput setab 4 ; tput bold ; printf '%35s%s%-18s\n' " AGUARDE A INSTALAÇÃO" ; tput sgr0
echo ""
echo -e "          \033[1;37m[\033[1;31m!\033[1;37m] \033[1;32mATUALIZANDO SISTEMA \033[1;37m[\033[1;31m!\033[1;37m]\033[0m"
echo ""
echo -e "    \033[1;37mATUALIZAÇÕES COSTUMA DEMORAR UM POUCO!\033[0m"
echo ""
fun_attlist () {
apt-get update -y
[[ ! -d /usr/share/.plus ]] && mkdir /usr/share/.plus
echo "crz: $(date)" > /usr/share/.plus/.plus
}
fun_bar 'fun_attlist'
#-----------------------------------------------------------------------------------------------------------------
    tput reset
    echo ""
    echo -e "          \033[1;37m[\033[1;31m!\033[1;37m] \033[1;32mAGUARDE A INSTALAÇÃO \033[1;37m[\033[1;31m!\033[1;37m] \033[0m"
    echo ""
    echo -e "                \033[1;37mOTIMIZANDO PYTHON \033[0m"
    echo ""
    echo -e "            \033[1;37mCOSTUMA DEMORAR UM POUCO!\033[0m"
    echo ""
    otimize_python() {
    # INSTALA PYTHON AO PYTHON2
    apt-get install python -y >/dev/null 2>&1
    apt-get install python2 -y >/dev/null 2>&1
    # INSTALA PYTHON3.6 AO PYTHON3.9
    apt-get install python3.6 -y >/dev/null 2>&1
    apt-get install python3.7 -y >/dev/null 2>&1
    apt-get install python3.8 -y >/dev/null 2>&1
    apt-get install python3.9 -y >/dev/null 2>&1
    # CRIA ALTERNATIVAS PYTHON
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1 >/dev/null 2>&1
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 3 >/dev/null 2>&1
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 2 >/dev/null 2>&1
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 4 >/dev/null 2>&1
    # INSTALA PIP
    apt install pip -y
    apt install python3-pip -y
    # INSTALA SOCAT
    apt install socat -y
    #SETAR PYTHON3
    update-alternatives --set python3 /usr/bin/python3.6
}
    fun_bar 'otimize_python'
#-----------------------------------------------------------------------------------------------------------------
tput reset
echo ""
echo -e "          \033[1;37m[\033[1;31m!\033[1;37m] \033[1;32mINSTALANDO PACOTES \033[1;37m[\033[1;31m!\033[1;37m] \033[0m"
echo ""
echo -e "\033[1;37mALGUNS PACOTES SAO EXTREMAMENTE  NECESSÁRIOS !\033[0m"
echo ""
inst_pct () {
_pacotes=("bc" "screen" "nano" "unzip" "lsof" "netstat" "net-tools" "dos2unix" "nload" "jq" "curl" "figlet" "python3" "python-pip" "firewalld")
for _prog in ${_pacotes[@]}; do
apt install $_prog -y
done
pip install speedtest-cli
sudo firewall-cmd --zone=public --permanent --add-port=80/tcp ; sudo firewall-cmd --zone=public --permanent --add-port=8989/tcp ; sudo firewall-cmd --zone=public --permanent --add-port=5454/tcp ; sudo firewall-cmd --zone=public --permanent --add-port=8888/tcp ; sudo firewall-cmd --zone=public --permanent --add-port=8080/tcp ; sudo firewall-cmd --zone=public --permanent --add-port=7300/udp ; sudo firewall-cmd --zone=public --permanent --add-port=443/tcp ; sudo firewall-cmd --zone=public --permanent --add-port=8080/tcp ; sudo firewall-cmd --reload
}
fun_bar 'inst_pct'
#-----------------------------------------------------------------------------------------------------------------
[[ -f "/usr/sbin/ufw" ]] && ufw allow 443/tcp ; ufw allow 80/tcp ; ufw allow 3128/tcp ; ufw allow 8799/tcp ; ufw allow 8080/tcp
#-----------------------------------------------------------------------------------------------------------------
tput reset
echo -e "              \033[1;33m[\033[1;31m!\033[1;33m] \033[1;32mFINALIZANDO \033[1;33m[\033[1;31m!\033[1;33m] \033[0m"
echo ""
echo -e "      \033[1;37mCONCLUINDO FUNÇÕES E DEFINIÇÕES! \033[0m"
echo ""
fun_bar "$_Ink/list $_lnk $_Ink $_1nk $key"
#-----------------------------------------------------------------------------------------------------------------
tput reset
echo ""
cd $HOME
echo -e ""
echo -e "             \033[1;37m • \033[1;32mINSTALAÇÃO CONCLUÍDA\033[1;37m • \033[0m"
echo -e ""
echo -e "\033[1;31m \033[1;37mCOMANDO PRINCIPAL: \033[1;32mmenu\033[0m"
echo -e "\033[1;37m MAIS INFORMACOES \033[1;31m(\033[1;36mTELEGRAM\033[1;31m): \033[1;37m@Niltonjuniornzx\033[0m"

